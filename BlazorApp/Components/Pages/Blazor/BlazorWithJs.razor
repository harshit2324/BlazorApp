@page "/blazorwithjs"
@inject IJSRuntime _jsruntime

<h3>BlazorWithJs</h3>

<div class="row">
	<button class="btn btn-secondary" @onclick="TestConfirmBox">
		Test Confirm Button
	</button>
</div>

<div class="row">
	@if (ConfirmResult) 
	{
		<p>Confirmation has been made!</p>
	}
	else
	{
		<p>pending Confirmation</p>
	}
</div>
<div>
	<button class="btn btn-success m-2" @onclick="ToastrSuccess">Toasr success</button>
	<button class="btn btn-danger m-2" @onclick="ToastrError">Toasr error</button>
</div>

<div>
	<button class="btn btn-success m-2" @onclick="SweetalertSuccess">sweetalert success</button>
	<button class="btn btn-danger m-2" @onclick="SweetalertError">sweetalert error</button>
</div>

@code {
	private string ConfirmMessage = "Are you sure you want to delete this record?";
	private bool ConfirmResult { get; set; }
	private async Task TestConfirmBox()
	{
		ConfirmResult= await _jsruntime.InvokeAsync<bool>("confirm", ConfirmMessage);
	}

	private async Task ToastrSuccess()
	{
		//await _jsruntime.InvokeVoidAsync("showToastr", "success", "Success Notification");
		await _jsruntime.ToastrSuccess("Success Notification");
	}


	private async Task ToastrError()
	{
		//await _jsruntime.InvokeVoidAsync("showToastr", "error", "Erorr Notification");
		await _jsruntime.ToastrError("Erorr Notification");
	}

	private async Task SweetalertSuccess()
	{
		await _jsruntime.InvokeVoidAsync("ShowSwal", "success", "Task completed");
		
	}

	private async Task SweetalertError()
	{
		await _jsruntime.InvokeVoidAsync("ShowSwal", "error", "Task Failed");
		
	}
}
